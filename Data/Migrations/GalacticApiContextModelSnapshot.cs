// <auto-generated />
using System;
using GalacticApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GalacticApi.Data.Migrations
{
    [DbContext(typeof(GalacticApiContext))]
    partial class GalacticApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GalacticApi.Models.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NombreAsignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Asignaturas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreAsignatura = "Lengua"
                        },
                        new
                        {
                            Id = 2,
                            NombreAsignatura = "Matematicas"
                        },
                        new
                        {
                            Id = 3,
                            NombreAsignatura = "Conocimiento del medio"
                        },
                        new
                        {
                            Id = 4,
                            NombreAsignatura = "Educación Artística"
                        },
                        new
                        {
                            Id = 5,
                            NombreAsignatura = "Ingles"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.AsignaturaJuego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AsignaturaId")
                        .HasColumnType("int");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoJuego")
                        .HasColumnType("int");

                    b.Property<string>("JuegoAsignatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoJuegoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsignaturaId");

                    b.HasIndex("TipoJuegoId");

                    b.ToTable("AsignaturaJuegos");
                });

            modelBuilder.Entity("GalacticApi.Models.Avatar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodigoJuego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Premium")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("RutaFoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avatars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoJuego = "XXXXXX",
                            Premium = "N",
                            RutaFoto = ""
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"), 1L, 1);

                    b.Property<string>("NombreCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            NombreCurso = "1º Primaria"
                        },
                        new
                        {
                            CursoId = 2,
                            NombreCurso = "2º Primaria"
                        },
                        new
                        {
                            CursoId = 3,
                            NombreCurso = "3º Primaria"
                        },
                        new
                        {
                            CursoId = 4,
                            NombreCurso = "4º Primaria"
                        },
                        new
                        {
                            CursoId = 5,
                            NombreCurso = "5º Primaria"
                        },
                        new
                        {
                            CursoId = 6,
                            NombreCurso = "6º Primaria"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.Juego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AsignaturaJuegoId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAsignatura")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoJuego")
                        .HasColumnType("int");

                    b.Property<string>("TemaJuego")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AsignaturaJuegoId");

                    b.HasIndex("IdAsignatura");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdTipoJuego");

                    b.ToTable("Juegos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "XXXXXX",
                            IdAsignatura = 1,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Autores"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "XXXXXX",
                            IdAsignatura = 1,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = "XXXXXX",
                            IdAsignatura = 1,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = "XXXXXX",
                            IdAsignatura = 2,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 5,
                            Codigo = "XXXXXX",
                            IdAsignatura = 2,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 6,
                            Codigo = "XXXXXX",
                            IdAsignatura = 2,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 7,
                            Codigo = "XXXXXX",
                            IdAsignatura = 3,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 8,
                            Codigo = "XXXXXX",
                            IdAsignatura = 3,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 9,
                            Codigo = "XXXXXX",
                            IdAsignatura = 3,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        },
                        new
                        {
                            Id = 10,
                            Codigo = "XXXXXX",
                            IdAsignatura = 3,
                            IdCurso = 1,
                            IdTipoJuego = 1,
                            TemaJuego = "Otra Cosa"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.Pasapalabra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdJuego")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdJuego")
                        .IsUnique();

                    b.ToTable("Pasapalabras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdJuego = 1,
                            Name = "Nombres de autores pasapalabra"
                        },
                        new
                        {
                            Id = 2,
                            IdJuego = 2,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 3,
                            IdJuego = 3,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 4,
                            IdJuego = 4,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 5,
                            IdJuego = 5,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 6,
                            IdJuego = 6,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 7,
                            IdJuego = 7,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 8,
                            IdJuego = 8,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 9,
                            IdJuego = 9,
                            Name = "Nombres de otras cosas pasapalabra"
                        },
                        new
                        {
                            Id = 10,
                            IdJuego = 10,
                            Name = "Nombres de otras cosas pasapalabra"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.PreguntaPasapalabra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("PasapalabraId")
                        .HasColumnType("int");

                    b.Property<string>("Pregunta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Respuesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PasapalabraId");

                    b.ToTable("PreguntaPasapalabras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Letra = "A",
                            PasapalabraId = 1,
                            Pregunta = "Nombre de autor que empieza por A",
                            Respuesta = "Aaron"
                        },
                        new
                        {
                            Id = 2,
                            Letra = "B",
                            PasapalabraId = 1,
                            Pregunta = "Fruta que empieza por B",
                            Respuesta = "Banana"
                        },
                        new
                        {
                            Id = 3,
                            Letra = "C",
                            PasapalabraId = 1,
                            Pregunta = "Animal que empieza por C",
                            Respuesta = "Canguro"
                        },
                        new
                        {
                            Id = 4,
                            Letra = "D",
                            PasapalabraId = 1,
                            Pregunta = "Capital europea que empieza por D",
                            Respuesta = "Dublín"
                        },
                        new
                        {
                            Id = 5,
                            Letra = "E",
                            PasapalabraId = 1,
                            Pregunta = "Elemento químico que empieza por E",
                            Respuesta = "Estroncio"
                        },
                        new
                        {
                            Id = 6,
                            Letra = "F",
                            PasapalabraId = 1,
                            Pregunta = "País asiático que empieza por F",
                            Respuesta = "Filipinas"
                        },
                        new
                        {
                            Id = 7,
                            Letra = "G",
                            PasapalabraId = 1,
                            Pregunta = "Deporte que empieza por G",
                            Respuesta = "Golf"
                        },
                        new
                        {
                            Id = 8,
                            Letra = "H",
                            PasapalabraId = 1,
                            Pregunta = "Instrumento musical que empieza por H",
                            Respuesta = "Harmónica"
                        },
                        new
                        {
                            Id = 9,
                            Letra = "I",
                            PasapalabraId = 1,
                            Pregunta = "Planeta que empieza por I",
                            Respuesta = "Júpiter"
                        },
                        new
                        {
                            Id = 10,
                            Letra = "J",
                            PasapalabraId = 1,
                            Pregunta = "Actor famoso que empieza por J",
                            Respuesta = "Johnny Depp"
                        },
                        new
                        {
                            Id = 11,
                            Letra = "K",
                            PasapalabraId = 1,
                            Pregunta = "Planta que empieza por K",
                            Respuesta = "Kiwi"
                        },
                        new
                        {
                            Id = 12,
                            Letra = "L",
                            PasapalabraId = 1,
                            Pregunta = "Color que empieza por L",
                            Respuesta = "Lavanda"
                        },
                        new
                        {
                            Id = 13,
                            Letra = "M",
                            PasapalabraId = 1,
                            Pregunta = "Cantante famoso que empieza por M",
                            Respuesta = "Michael Jackson"
                        },
                        new
                        {
                            Id = 14,
                            Letra = "N",
                            PasapalabraId = 1,
                            Pregunta = "Río que empieza por N",
                            Respuesta = "Nilo"
                        },
                        new
                        {
                            Id = 15,
                            Letra = "O",
                            PasapalabraId = 1,
                            Pregunta = "Película famosa que empieza por O",
                            Respuesta = "El Origen"
                        },
                        new
                        {
                            Id = 16,
                            Letra = "P",
                            PasapalabraId = 1,
                            Pregunta = "Instrumento de percusión que empieza por P",
                            Respuesta = "Pandereta"
                        },
                        new
                        {
                            Id = 17,
                            Letra = "Q",
                            PasapalabraId = 1,
                            Pregunta = "Animal exótico que empieza por Q",
                            Respuesta = "Quokka"
                        },
                        new
                        {
                            Id = 18,
                            Letra = "R",
                            PasapalabraId = 1,
                            Pregunta = "País africano que empieza por R",
                            Respuesta = "Ruanda"
                        },
                        new
                        {
                            Id = 19,
                            Letra = "S",
                            PasapalabraId = 1,
                            Pregunta = "Planta aromática que empieza por S",
                            Respuesta = "Salvia"
                        },
                        new
                        {
                            Id = 20,
                            Letra = "T",
                            PasapalabraId = 1,
                            Pregunta = "Elemento químico que empieza por T",
                            Respuesta = "Tungsteno"
                        },
                        new
                        {
                            Id = 21,
                            Letra = "U",
                            PasapalabraId = 1,
                            Pregunta = "País europeo que empieza por U",
                            Respuesta = "Ucrania"
                        },
                        new
                        {
                            Id = 22,
                            Letra = "V",
                            PasapalabraId = 1,
                            Pregunta = "Fruta que empieza por V",
                            Respuesta = "Vainilla"
                        },
                        new
                        {
                            Id = 23,
                            Letra = "W",
                            PasapalabraId = 1,
                            Pregunta = "Animal marino que empieza por W",
                            Respuesta = "Ballena"
                        },
                        new
                        {
                            Id = 24,
                            Letra = "X",
                            PasapalabraId = 1,
                            Pregunta = "Instrumento musical que empieza por X",
                            Respuesta = "Xilófono"
                        },
                        new
                        {
                            Id = 25,
                            Letra = "Y",
                            PasapalabraId = 1,
                            Pregunta = "Ciudad asiática que empieza por Y",
                            Respuesta = "Yakarta"
                        },
                        new
                        {
                            Id = 26,
                            Letra = "Z",
                            PasapalabraId = 1,
                            Pregunta = "Fruta tropical que empieza por Z",
                            Respuesta = "Zarzamora"
                        },
                        new
                        {
                            Id = 27,
                            Letra = "A",
                            PasapalabraId = 2,
                            Pregunta = "País sudamericano que empieza por A",
                            Respuesta = "Argentina"
                        },
                        new
                        {
                            Id = 28,
                            Letra = "B",
                            PasapalabraId = 2,
                            Pregunta = "Elemento químico que empieza por B",
                            Respuesta = "Boro"
                        },
                        new
                        {
                            Id = 29,
                            Letra = "C",
                            PasapalabraId = 2,
                            Pregunta = "Capital europea que empieza por C",
                            Respuesta = "Copenhague"
                        },
                        new
                        {
                            Id = 30,
                            Letra = "D",
                            PasapalabraId = 2,
                            Pregunta = "Actor de cine que empieza por D",
                            Respuesta = "Denzel Washington"
                        },
                        new
                        {
                            Id = 31,
                            Letra = "E",
                            PasapalabraId = 2,
                            Pregunta = "Animal salvaje que empieza por E",
                            Respuesta = "Elefante"
                        },
                        new
                        {
                            Id = 32,
                            Letra = "F",
                            PasapalabraId = 2,
                            Pregunta = "Deporte de invierno que empieza por F",
                            Respuesta = "Fútbol"
                        },
                        new
                        {
                            Id = 33,
                            Letra = "G",
                            PasapalabraId = 2,
                            Pregunta = "Ciudad europea que empieza por G",
                            Respuesta = "Ginebra"
                        },
                        new
                        {
                            Id = 34,
                            Letra = "H",
                            PasapalabraId = 2,
                            Pregunta = "Instrumento de viento que empieza por H",
                            Respuesta = "Hornillo"
                        },
                        new
                        {
                            Id = 35,
                            Letra = "I",
                            PasapalabraId = 2,
                            Pregunta = "Planeta que empieza por I",
                            Respuesta = "Iapetus"
                        },
                        new
                        {
                            Id = 36,
                            Letra = "J",
                            PasapalabraId = 2,
                            Pregunta = "Cantante famoso que empieza por J",
                            Respuesta = "Justin Bieber"
                        },
                        new
                        {
                            Id = 37,
                            Letra = "K",
                            PasapalabraId = 2,
                            Pregunta = "Fruta tropical que empieza por K",
                            Respuesta = "Kumquat"
                        },
                        new
                        {
                            Id = 38,
                            Letra = "L",
                            PasapalabraId = 2,
                            Pregunta = "Animal marino que empieza por L",
                            Respuesta = "Langosta"
                        },
                        new
                        {
                            Id = 39,
                            Letra = "M",
                            PasapalabraId = 2,
                            Pregunta = "País africano que empieza por M",
                            Respuesta = "Mozambique"
                        },
                        new
                        {
                            Id = 40,
                            Letra = "N",
                            PasapalabraId = 2,
                            Pregunta = "Comida típica mexicana que empieza por N",
                            Respuesta = "Nopal"
                        },
                        new
                        {
                            Id = 41,
                            Letra = "O",
                            PasapalabraId = 2,
                            Pregunta = "Actor famoso que empieza por O",
                            Respuesta = "Orlando Bloom"
                        },
                        new
                        {
                            Id = 42,
                            Letra = "P",
                            PasapalabraId = 2,
                            Pregunta = "Ciudad europea que empieza por P",
                            Respuesta = "París"
                        },
                        new
                        {
                            Id = 43,
                            Letra = "Q",
                            PasapalabraId = 2,
                            Pregunta = "Animal doméstico que empieza por Q",
                            Respuesta = "Quagga"
                        },
                        new
                        {
                            Id = 44,
                            Letra = "R",
                            PasapalabraId = 2,
                            Pregunta = "Elemento químico que empieza por R",
                            Respuesta = "Radio"
                        },
                        new
                        {
                            Id = 45,
                            Letra = "S",
                            PasapalabraId = 2,
                            Pregunta = "Cantante famosa que empieza por S",
                            Respuesta = "Selena Gomez"
                        },
                        new
                        {
                            Id = 46,
                            Letra = "T",
                            PasapalabraId = 2,
                            Pregunta = "Planta medicinal que empieza por T",
                            Respuesta = "Tilo"
                        },
                        new
                        {
                            Id = 47,
                            Letra = "U",
                            PasapalabraId = 2,
                            Pregunta = "País asiático que empieza por U",
                            Respuesta = "Uzbekistán"
                        },
                        new
                        {
                            Id = 48,
                            Letra = "V",
                            PasapalabraId = 2,
                            Pregunta = "Animal salvaje que empieza por V",
                            Respuesta = "Víbora"
                        },
                        new
                        {
                            Id = 49,
                            Letra = "W",
                            PasapalabraId = 2,
                            Pregunta = "Actor famoso que empieza por W",
                            Respuesta = "Will Smith"
                        },
                        new
                        {
                            Id = 50,
                            Letra = "X",
                            PasapalabraId = 2,
                            Pregunta = "Animal exótico que empieza por X",
                            Respuesta = "Xoloitzcuintli"
                        },
                        new
                        {
                            Id = 51,
                            Letra = "Y",
                            PasapalabraId = 2,
                            Pregunta = "Río que empieza por Y",
                            Respuesta = "Yukón"
                        },
                        new
                        {
                            Id = 52,
                            Letra = "Z",
                            PasapalabraId = 2,
                            Pregunta = "Fruta tropical que empieza por Z",
                            Respuesta = "Zapote"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.Resultados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdJuego")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<double>("Resultado")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdJuego");

                    b.HasIndex("IdUsuario");

                    b.ToTable("resultados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdJuego = 1,
                            IdUsuario = 1,
                            Resultado = 0.0
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.TipoJuego", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoJuegos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = "Pasapalabra"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AvatarId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvatarId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarId = 1,
                            Email = "aaron@svalero.com",
                            Name = "Aaron",
                            Password = "1234",
                            Rol = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            AvatarId = 1,
                            Email = "antonio@svalero.com",
                            Name = "Antonio",
                            Password = "1234",
                            Rol = "Profesor"
                        },
                        new
                        {
                            Id = 3,
                            AvatarId = 1,
                            Email = "alex@svalero.com",
                            Name = "Alex",
                            Password = "1234",
                            Rol = "Alumno"
                        });
                });

            modelBuilder.Entity("GalacticApi.Models.AsignaturaJuego", b =>
                {
                    b.HasOne("GalacticApi.Models.Asignatura", "Asignatura")
                        .WithMany()
                        .HasForeignKey("AsignaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GalacticApi.Models.TipoJuego", "TipoJuego")
                        .WithMany()
                        .HasForeignKey("TipoJuegoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignatura");

                    b.Navigation("TipoJuego");
                });

            modelBuilder.Entity("GalacticApi.Models.Juego", b =>
                {
                    b.HasOne("GalacticApi.Models.AsignaturaJuego", null)
                        .WithMany("Juegos")
                        .HasForeignKey("AsignaturaJuegoId");

                    b.HasOne("GalacticApi.Models.Asignatura", "Asignatura")
                        .WithMany("Juegos")
                        .HasForeignKey("IdAsignatura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GalacticApi.Models.Curso", "Curso")
                        .WithMany("Juegos")
                        .HasForeignKey("IdCurso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GalacticApi.Models.TipoJuego", "TipoJuego")
                        .WithMany("Juegos")
                        .HasForeignKey("IdTipoJuego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignatura");

                    b.Navigation("Curso");

                    b.Navigation("TipoJuego");
                });

            modelBuilder.Entity("GalacticApi.Models.Pasapalabra", b =>
                {
                    b.HasOne("GalacticApi.Models.Juego", "Juego")
                        .WithOne("Pasapalabra")
                        .HasForeignKey("GalacticApi.Models.Pasapalabra", "IdJuego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Juego");
                });

            modelBuilder.Entity("GalacticApi.Models.PreguntaPasapalabra", b =>
                {
                    b.HasOne("GalacticApi.Models.Pasapalabra", "Pasapalabra")
                        .WithMany("PreguntaPasapalabras")
                        .HasForeignKey("PasapalabraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pasapalabra");
                });

            modelBuilder.Entity("GalacticApi.Models.Resultados", b =>
                {
                    b.HasOne("GalacticApi.Models.Juego", "Juego")
                        .WithMany("Resultados")
                        .HasForeignKey("IdJuego")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GalacticApi.Models.Usuario", "Usuario")
                        .WithMany("Resultados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Juego");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GalacticApi.Models.Usuario", b =>
                {
                    b.HasOne("GalacticApi.Models.Avatar", "Avatar")
                        .WithMany("Usuarios")
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avatar");
                });

            modelBuilder.Entity("GalacticApi.Models.Asignatura", b =>
                {
                    b.Navigation("Juegos");
                });

            modelBuilder.Entity("GalacticApi.Models.AsignaturaJuego", b =>
                {
                    b.Navigation("Juegos");
                });

            modelBuilder.Entity("GalacticApi.Models.Avatar", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("GalacticApi.Models.Curso", b =>
                {
                    b.Navigation("Juegos");
                });

            modelBuilder.Entity("GalacticApi.Models.Juego", b =>
                {
                    b.Navigation("Pasapalabra")
                        .IsRequired();

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("GalacticApi.Models.Pasapalabra", b =>
                {
                    b.Navigation("PreguntaPasapalabras");
                });

            modelBuilder.Entity("GalacticApi.Models.TipoJuego", b =>
                {
                    b.Navigation("Juegos");
                });

            modelBuilder.Entity("GalacticApi.Models.Usuario", b =>
                {
                    b.Navigation("Resultados");
                });
#pragma warning restore 612, 618
        }
    }
}
